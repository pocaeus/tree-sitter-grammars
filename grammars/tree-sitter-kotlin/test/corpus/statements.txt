================================================================================
For statements
================================================================================

for (value in values) {}

--------------------------------------------------------------------------------

(source_file
  (for_statement
    variable: (variable_declaration
      (simple_identifier))
    value: (simple_identifier)
    body: (control_structure_body)))

================================================================================
For with multiple variables
================================================================================

for ((variable0, variable1) in container) {
  then()
}

--------------------------------------------------------------------------------

(source_file
  (for_statement
    variables: (multi_variable_declaration
      (variable_declaration
        (simple_identifier))
      (variable_declaration
        (simple_identifier)))
    value: (simple_identifier)
    body: (control_structure_body
      (statements
        (call_expression
          (simple_identifier)
          (call_suffix
            (value_arguments)))))))

================================================================================
Statements separated by semicolon
================================================================================

override fun isDisposed(): Boolean { expectUnreached();  return false }

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    modifiers: (modifiers
      (member_modifier))
    name: (simple_identifier)
    parameters: (function_value_parameters)
    return_type: (user_type
      (type_identifier))
    body: (function_body
      (statements
        (call_expression
          (simple_identifier)
          (call_suffix
            (value_arguments)))
        (jump_expression
          (boolean_literal))))))

================================================================================
Getters
================================================================================

val x get () = 2

val ty x get () = 3

--------------------------------------------------------------------------------

(source_file
  (property_declaration
    variable: (variable_declaration
      (simple_identifier))
    getter: (getter
      (function_body
        (integer_literal))))
  (property_declaration
    receiver: (user_type
      (type_identifier))
    variable: (variable_declaration
      (simple_identifier))
    getter: (getter
      (function_body
        (integer_literal)))))

================================================================================
Multiple variables
================================================================================

val (x, y, z) = listOf(1, 2, 3)

--------------------------------------------------------------------------------

(source_file
  (property_declaration
    variables: (multi_variable_declaration
      (variable_declaration
        (simple_identifier))
      (variable_declaration
        (simple_identifier))
      (variable_declaration
        (simple_identifier)))
    expression: (call_expression
      (simple_identifier)
      (call_suffix
        (value_arguments
          (value_argument
            (integer_literal))
          (value_argument
            (integer_literal))
          (value_argument
            (integer_literal)))))))

================================================================================
While
================================================================================

while (condition) {
  then()
}

--------------------------------------------------------------------------------

(source_file
  (while_statement
    condition: (simple_identifier)
    body: (control_structure_body
      (statements
        (call_expression
          (simple_identifier)
          (call_suffix
            (value_arguments)))))))

================================================================================
Do while
================================================================================

do {
  then()
} while (condition)

--------------------------------------------------------------------------------

(source_file
  (do_while_statement
    body: (control_structure_body
      (statements
        (call_expression
          (simple_identifier)
          (call_suffix
            (value_arguments)))))
    condition: (simple_identifier)))
